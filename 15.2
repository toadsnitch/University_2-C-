/*
1. Во всех задачах данного раздела подразумевается, что исходная информация хранится в
текстовом файле input.txt, каждая строка которого содержит полную информацию о некотором
объекте; результирующая информация должна быть записана в файл output.txt.
2. Для хранения данных внутри программы организовать одномерный массив структур или любую
другую подходящую коллекцию структур. Выбор коллекции обосновать.

Задание 1. На основе данных входного файла составить список студентов группы,
включив следующие данные: ФИО, год рождения, домашний адрес, какую школу окончил.
Вывести в новый файл информацию о студентах, окончивших заданную школу,
отсортировав их по году рождения.
*/

using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

namespace MyProgram
{
    class Program
    {
        class People
        {
            public string Surname { get; set; }
            public string Name { get; set; }
            public string Patronymic { get; set; }
            public int Year { get; set; }
            public string Address { get; set; }
            public int School { get; set; }
        }
        static void Main()
        {
            using (StreamReader fileIn = new StreamReader("input.txt"/*, Encoding.GetEncoding(1251)*/))
            {
                using (StreamWriter fileOut = new StreamWriter("output.txt", false))
                {
                    List<People> students = new List<People>();
                    while (!fileIn.EndOfStream)
                    {
                        string[] data = fileIn.ReadLine().Split(' ');
                        People student = new People();
                        student.Surname = data[0];
                        student.Name = data[1];
                        student.Patronymic = data[2];
                        student.Year = int.Parse(data[3]);
                        student.Address = data[4];
                        student.School = int.Parse(data[5]);
                        students.Add(student);
                    }
                    var query =
                        from student in students
                        group student by student.School;
                    foreach (var items in query)
                    {
                        fileOut.WriteLine("Должность (школа) {0}:", items.Key);
                        foreach (var item in items)
                        {
                            fileOut.WriteLine("{0} {1} {2} {3} {4} {5}", item.Surname, item.Name, item.Patronymic, item.Year, item.Address, item.School);
                        }
                    }
                }
            }
        }
    }
}
